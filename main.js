(()=>{"use strict";var n={982:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Varela+Round&display=swap);"]),i.push([n.id,":root {\n  --main-colour: #60a5fa;\n  --btn-hover: #72b0fc;\n  --light-blue: #93c5fd;\n  --light-gray-bg: #eff6ff;\n  --hit: #b91c1c;\n  --miss: #bfdbfe;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: 'Varela Round', sans-serif;\n  font-size: 16px;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n  background-color: var(--light-gray-bg);\n}\n\nbutton {\n  border: none;\n  border-radius: 4px;\n  background-color: var(--main-colour);\n  color: rgb(255, 255, 255);\n  padding: 8px 12px;\n  font-weight: 600;\n  cursor: pointer;\n}\n\nbutton:active {\n  animation: scaleUp 0.5s;\n}\n\n@keyframes scaleUp {\n  from {\n    transform: scale(1.1);\n  }\n  to {\n    transform: scale(1);\n  }\n}\n\nbutton:hover {\n  background-color: var(--btn-hover);\n}\n\nh1,\nh2,\nh3 {\n  margin: 0;\n  padding: 0;\n}\n\n#container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header */\nheader {\n  margin-bottom: 48px;\n  padding: 18px 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.128);\n  background-color: white;\n}\n\na.github > img {\n  transition: transform 0.5s ease-in-out;\n}\n\n/* Logo animation */\na.github > img:hover {\n  transform: rotate(360deg);\n}\n\n#arena {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.arena-header {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.game-stage-title {\n  font-weight: 500;\n}\n\n.boards-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n.boards-container {\n  position: relative;\n  display: flex;\n  gap: 60px;\n}\n\n.board-container {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n/* Buttons under board */\n.btn-hidden {\n  display: none;\n}\n\n/* Boards */\n.player-board,\n.computer-board {\n  width: 500px;\n  aspect-ratio: 1;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  box-shadow: 2px 2px 4px 4px rgba(0, 0, 0, 0.055);\n}\n\n.player-board.playing {\n  pointer-events: none;\n}\n\n/* Hide the computer arena until the game starts */\n.computer-arena.hide-arena {\n  display: none;\n}\n\n/* Grid cells styling */\n.grid-cell[empty='true'] {\n  border: 1px solid var(--light-blue);\n}\n\n.grid-cell[hover] {\n  background-color: rgb(207, 207, 207);\n}\n\n.grid-cell:hover {\n  background-color: rgb(207, 207, 207);\n  cursor: crosshair;\n}\n\n.grid-cell[empty='false'] {\n  background-color: var(--main-colour);\n}\n\n.grid-cell.hit {\n  background-color: var(--hit);\n}\n\n.grid-cell.miss {\n  background-color: var(--miss);\n}\n\n.modal-overlay {\n  position: absolute;\n  height: 100%;\n  top: -100%;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.455);\n  z-index: 5;\n  transition: transform 0.2s;\n}\n\n.modal-overlay.active {\n  transform: translateY(100%);\n}\n\n.game-over-modal {\n  border-radius: 4px;\n  padding: 40px;\n  background-color: var(--light-gray-bg);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.gameOver-msg {\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n@media only screen and (max-width: 1100px) {\n  .boards-container {\n    flex-direction: column;\n  }\n}\n","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAEA;EACE,sBAAsB;EACtB,oBAAoB;EACpB,qBAAqB;EACrB,wBAAwB;EACxB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,uCAAuC;EACvC,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,iBAAiB;EACjB,sCAAsC;AACxC;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,yBAAyB;EACzB,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE;IACE,qBAAqB;EACvB;EACA;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE,kCAAkC;AACpC;;AAEA;;;EAGE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA,WAAW;AACX;EACE,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,0CAA0C;EAC1C,uBAAuB;AACzB;;AAEA;EACE,sCAAsC;AACxC;;AAEA,mBAAmB;AACnB;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,wBAAwB;AACxB;EACE,aAAa;AACf;;AAEA,WAAW;AACX;;EAEE,YAAY;EACZ,eAAe;EACf,aAAa;EACb,sCAAsC;EACtC,gDAAgD;AAClD;;AAEA;EACE,oBAAoB;AACtB;;AAEA,kDAAkD;AAClD;EACE,aAAa;AACf;;AAEA,uBAAuB;AACvB;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;EACpC,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,OAAO;EACP,QAAQ;EACR,sCAAsC;EACtC,UAAU;EACV,0BAA0B;AAC5B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sCAAsC;EACtC,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE;IACE,sBAAsB;EACxB;AACF",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Varela+Round&display=swap');\n\n:root {\n  --main-colour: #60a5fa;\n  --btn-hover: #72b0fc;\n  --light-blue: #93c5fd;\n  --light-gray-bg: #eff6ff;\n  --hit: #b91c1c;\n  --miss: #bfdbfe;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: 'Varela Round', sans-serif;\n  font-size: 16px;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n  background-color: var(--light-gray-bg);\n}\n\nbutton {\n  border: none;\n  border-radius: 4px;\n  background-color: var(--main-colour);\n  color: rgb(255, 255, 255);\n  padding: 8px 12px;\n  font-weight: 600;\n  cursor: pointer;\n}\n\nbutton:active {\n  animation: scaleUp 0.5s;\n}\n\n@keyframes scaleUp {\n  from {\n    transform: scale(1.1);\n  }\n  to {\n    transform: scale(1);\n  }\n}\n\nbutton:hover {\n  background-color: var(--btn-hover);\n}\n\nh1,\nh2,\nh3 {\n  margin: 0;\n  padding: 0;\n}\n\n#container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header */\nheader {\n  margin-bottom: 48px;\n  padding: 18px 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.128);\n  background-color: white;\n}\n\na.github > img {\n  transition: transform 0.5s ease-in-out;\n}\n\n/* Logo animation */\na.github > img:hover {\n  transform: rotate(360deg);\n}\n\n#arena {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.arena-header {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.game-stage-title {\n  font-weight: 500;\n}\n\n.boards-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n.boards-container {\n  position: relative;\n  display: flex;\n  gap: 60px;\n}\n\n.board-container {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n/* Buttons under board */\n.btn-hidden {\n  display: none;\n}\n\n/* Boards */\n.player-board,\n.computer-board {\n  width: 500px;\n  aspect-ratio: 1;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  box-shadow: 2px 2px 4px 4px rgba(0, 0, 0, 0.055);\n}\n\n.player-board.playing {\n  pointer-events: none;\n}\n\n/* Hide the computer arena until the game starts */\n.computer-arena.hide-arena {\n  display: none;\n}\n\n/* Grid cells styling */\n.grid-cell[empty='true'] {\n  border: 1px solid var(--light-blue);\n}\n\n.grid-cell[hover] {\n  background-color: rgb(207, 207, 207);\n}\n\n.grid-cell:hover {\n  background-color: rgb(207, 207, 207);\n  cursor: crosshair;\n}\n\n.grid-cell[empty='false'] {\n  background-color: var(--main-colour);\n}\n\n.grid-cell.hit {\n  background-color: var(--hit);\n}\n\n.grid-cell.miss {\n  background-color: var(--miss);\n}\n\n.modal-overlay {\n  position: absolute;\n  height: 100%;\n  top: -100%;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.455);\n  z-index: 5;\n  transition: transform 0.2s;\n}\n\n.modal-overlay.active {\n  transform: translateY(100%);\n}\n\n.game-over-modal {\n  border-radius: 4px;\n  padding: 40px;\n  background-color: var(--light-gray-bg);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.gameOver-msg {\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n@media only screen and (max-width: 1100px) {\n  .boards-container {\n    flex-direction: column;\n  }\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:g,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{const n=()=>{let n=[];const e=[],t=()=>n.map((n=>n.coordinates)).flat(),r=(e,t)=>{const r=((n,e)=>{const t=[];return{getHitPositions:()=>t,getType:()=>n,hit:n=>t.push(n),isSunk:()=>e===t.length}})(e,t.length);n.push({ship:r,coordinates:t})},o=n=>!(n=>{let e=!1;return n.forEach((n=>{t().forEach((t=>{n[0]===t[0]&&n[1]===t[1]&&(e=!0)}))})),e})(n)&&(n=>{let e=!0;return n.forEach((n=>{const t=n[0],r=n[1];t>=0&&t<=11&&r>=0&&r<=11||(e=!1)})),e})(n);return{placeShip:r,getShips:()=>n,canPlaceAt:o,getMisses:()=>e,receiveAttack:r=>{t().some((n=>n.toString()===r.toString()))?(e=>{const t=(e=>n.map((n=>n.coordinates)).findIndex((n=>n.some((n=>n.toString()===e.toString())))))(e);n[t].ship.hit(e)})(r):(n=>{e.push(n)})(r)},getDamagedPositions:()=>n.map((n=>n.ship.getHitPositions())).flat(),autoPlaceShips:n=>{n.forEach((n=>{const{type:e,length:t}=n;r(e,(n=>{for(;;){const e=[],t=Math.random()>=.5?"X":"Y",r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];for(let o=0;o<n;o+=1){let n;n="X"===t?[r[0],r[1]+o]:[r[0]+o,r[1]],e.push(n)}if(o(e))return e}})(t))}))},getShipsCoordinates:t,reset:()=>{n=[]},allShipsSunk:()=>n.map((n=>n.ship)).every((n=>n.isSunk()))}},e=function(){const e=[{type:"Patrol Boat",length:2},{type:"Submarine",length:3},{type:"Destroyer",length:3},{type:"Battleship",length:4},{type:"Carrier",length:5}];let t=0,r=n(),o=n();o.autoPlaceShips(e);const a={attack:(n,e)=>e.receiveAttack(n)},i=(()=>{const n=(n,e)=>n.some((n=>n.toString()===e.toString())),e=()=>[Math.floor(12*Math.random()),Math.floor(12*Math.random())];return{attack:t=>{const r=(t=>{let r;r=e();const o=t.getDamagedPositions().concat(t.getMisses());for(;n(o,r);)r=e();return r})(t);t.receiveAttack(r)}}})(),s=()=>{t=0,r.reset()};return{allShipsPlaced:()=>e.length===t,getShipToPlace:()=>e[t],getPlayerMisses:()=>r.getMisses(),getPlayerHits:()=>r.getDamagedPositions(),getComputerMisses:()=>o.getMisses(),getComputerHits:()=>o.getDamagedPositions(),placePlayerRandom:()=>{s(),r.autoPlaceShips(e),t=e.length},getPlayerShipsPositions:()=>r.getShipsCoordinates(),resetPlayerBoard:s,placePlayerShip:n=>{const o=e[t].type;t+=1,r.placeShip(o,n)},availablePositions:n=>r.canPlaceAt(n),playerAttack:n=>{a.attack(n,o)},computerAttack:()=>{i.attack(r)},isGameOver:n=>"player"===n?r.allShipsSunk():o.allShipsSunk(),reload:()=>{t=0,r=n(),o=n(),o.autoPlaceShips(e)}}}(),r=(n,e,t=!0)=>{const r=document.createElement("div");return r.className=`grid-cell ${n}`,r.setAttribute("empty",t),r.setAttribute("coordinate",`${e[0]},${e[1]}`),r},o=function(){let n=e.getShipToPlace(),t="X";const o=document.querySelector(".player-board"),a=document.querySelector(".computer-board"),i=document.querySelector(".game-stage-title"),s=document.querySelector(".axis"),A=document.querySelector(".random-place"),l=document.querySelector(".reset-board"),c=document.querySelector(".start"),d=document.querySelector(".gameOver-msg"),p=document.querySelector(".modal-overlay"),u=document.querySelector(".replay"),g=()=>{t="X"===t?"Y":"X"},m=()=>{for(let n=0;n<12;n++)for(let e=0;e<12;e++){const t=r("player",[n,e]);o.appendChild(t)}},h=()=>{for(let n=0;n<12;n++)for(let e=0;e<12;e++){const t=r("computer",[n,e]);a.appendChild(t)}},C=()=>{e.getPlayerShipsPositions().forEach((n=>{o.querySelector(`.grid-cell[coordinate="${n[0]},${n[1]}"]`).setAttribute("empty",!1)}))},f=e=>{const r=[];if("X"===t)for(let t=0;t<n.length;t++)r.push([e[0],e[1]+t]);else for(let t=0;t<n.length;t++)r.push([e[0]+t,e[1]]);return r},E=(...n)=>{n.forEach((n=>n.classList.remove("btn-hidden")))},b=(...n)=>{n.forEach((n=>n.classList.add("btn-hidden")))},y=t=>{if(e.allShipsPlaced())return;const r=t.target;if(r.classList.contains("grid-cell")&&"true"===r.getAttribute("empty")){const t=r.getAttribute("coordinate").split(",").map((n=>parseInt(n,10))),o=f(t);if(!e.availablePositions(o))return;e.placePlayerShip(o),C(),n=e.getShipToPlace(),e.allShipsPlaced()&&E(c)}},B=()=>{const n=o.querySelectorAll(".grid-cell[empty='false']");n&&n.forEach((n=>n.setAttribute("empty",!0)))},v=()=>{const n=o.querySelectorAll(".grid-cell[hover]");n&&n.forEach((n=>{n.removeAttribute("hover")}))},x=(n,e)=>{"add"===e?n.classList.add("playing"):n.classList.remove("playing")},S=()=>{i.textContent="",x(o,"add"),v(),document.querySelector(".computer-arena").classList.remove("hide-arena"),b(l,A,c,s)},k=(n,t)=>{((n,t)=>{("player"===t?e.getPlayerHits():e.getComputerHits()).forEach((e=>{n.querySelector(`.grid-cell[coordinate="${e[0]},${e[1]}"]`).classList.add("hit")}))})(n,t),((n,t)=>{("player"===t?e.getPlayerMisses():e.getComputerMisses()).forEach((e=>{n.querySelector(`.grid-cell[coordinate="${e[0]},${e[1]}"]`).classList.add("miss")}))})(n,t)},P=n=>{const t=n.target;"grid-cell computer"===t.className&&(n=>{if(e.playerAttack(n),k(a,"computer"),e.isGameOver("computer"))return d.textContent="You won!",void p.classList.add("active");e.computerAttack(),k(o,"player"),e.isGameOver("player")&&(d.textContent="You lost!",p.classList.add("active"))})(t.getAttribute("coordinate").split(",").map((n=>parseInt(n,10))))},w=n=>{for(;n.firstChild;)n.firstChild.remove()},L=()=>{e.reload(),w(o),w(a),E(l,A,s),i.textContent="Place the Ships",h(),m(),document.querySelector(".computer-arena").classList.add("hide-arena"),p.classList.remove("active")};return{init:()=>{i.textContent="Place the Ships",m(),h(),s.addEventListener("click",g),o.addEventListener("mouseover",(n=>{n.target.classList.contains("grid-cell","player")&&(v(),(n=>{if(e.allShipsPlaced())return;const t=n.getAttribute("coordinate").split(",").map((n=>parseInt(n,10)));f(t).forEach((n=>{const e=o.querySelector(`.grid-cell[coordinate="${n[0]},${n[1]}"]`);e&&e.setAttribute("hover","")}))})(n.target))})),o.addEventListener("click",y),A.addEventListener("click",(()=>{e.placePlayerRandom(),B(),C(),e.allShipsPlaced()&&E(c)})),l.addEventListener("click",(()=>{x(o,"remove"),v(),e.resetPlayerBoard(),n=e.getShipToPlace(),B(),C(),b(c)})),c.addEventListener("click",S),a.addEventListener("click",P),u.addEventListener("click",L)}}}();var a=t(379),i=t.n(a),s=t(795),A=t.n(s),l=t(569),c=t.n(l),d=t(565),p=t.n(d),u=t(216),g=t.n(u),m=t(589),h=t.n(m),C=t(982),f={};f.styleTagTransform=h(),f.setAttributes=p(),f.insert=c().bind(null,"head"),f.domAPI=A(),f.insertStyleElement=g(),i()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals,o.init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,